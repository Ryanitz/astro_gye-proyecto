---
import datos from "../data/familias_montos.json";

export interface Props {
  totalInvestment: number;
}
// Extraer la propiedad totalInvestment de Astro.props
const { totalInvestment } = Astro.props;

// Extraer el tipo de cambio
const tipoDeCambioAvg = datos["tipo de cambio avg"];

// Excluir la clave "tipo de cambio avg" antes de calcular el total
const totalDollarAmountRaised = Math.round(
  Object.entries(datos)
    .filter(([key]) => key !== "tipo de cambio avg")
    .reduce((acc, [, amount]) => acc + amount, 0),
);

// Calcular el total recaudado en pesos
const totalPesoAmountRaised = Math.round(
  totalDollarAmountRaised * tipoDeCambioAvg,
);

// Función para agregar puntos a un número
const addDotsToNumber = (number: number) =>
  number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");
---

<section
  class="bg-gradient-to-br from-blue-50 to-white shadow-lg rounded-2xl p-10 mb-16"
>
  <h2 class="text-4xl font-bold mb-8 text-center text-gray-900">
    Resumen de Inversiones
  </h2>

  <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
    <div class="text-center p-6 bg-white rounded-xl shadow-md">
      <h3 class="text-2xl font-semibold mb-4 text-gray-700">
        Inversión hasta la fecha
      </h3>
      <p class="text-5xl font-bold text-green-600 mb-2">
        $ {addDotsToNumber(totalInvestment)}
      </p>
    </div>

    <div class="text-center p-6 bg-white rounded-xl shadow-md relative">
      <h3 class="text-2xl font-semibold mb-4 text-gray-700">Recaudado</h3>
      <p
        class="text-5xl font-bold text-blue-600 mb-2 flex items-center justify-center"
      >
        $ {addDotsToNumber(totalPesoAmountRaised)}
      </p>
    </div>
  </div>
</section>
